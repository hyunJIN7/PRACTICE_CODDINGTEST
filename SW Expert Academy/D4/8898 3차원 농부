#include<iostream>
#include <algorithm>

#define MAX_N 500001
 
using namespace std;

typedef long long ll;
int N, M, c1, c2; // 자료형?
int cow[MAX_N], horse[MAX_N]; 

int min_dis = 987654321, cnt = 0;

void binarySearch(){
	for(int i = 0 ; i < N; i++){
		int left = 0, right = M - 1;
		
		while(left <= right){
			int mid = left + (right - left) / 2;
			int curr_dis = abs(horse[mid] - cow[i]);
			
			if(curr_dis < min_dis){
				min_dis = curr_dis;
				cnt = 1;
			}
			else if(curr_dis == min_dis) cnt++;
						
			if(horse[mid] == cow[i]) break;
			
			if(horse[mid] < cow[i]) left = mid + 1;
			else right = mid - 1;	
		}	
	}
	
}

int main(int argc, char** argv)
{
	ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	int T;
	cin>>T;
	for(int test_case = 1; test_case <= T; ++test_case)
	{
		min_dis = 987654321, cnt = 0;
		cin >> N >> M >> c1 >> c2;
		for(int i = 0 ; i < N ;) cin >> cow[i++];
		for(int i = 0 ; i < M;) cin >> horse[i++];
		sort(horse, horse + M);
		binarySearch();
		cout << "#" << test_case << " " << min_dis + abs(c1 - c2) << " " << cnt <<endl;

	}
	return 0;
}
